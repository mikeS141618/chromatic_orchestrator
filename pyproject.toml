[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "chromatic-orchestrator"
version = "1.0.0"
description = "A blazing-fast, production-ready vision classification pipeline with advanced data parallel processing using multimodal LLMs"
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = {text = "Apache-2.0"}
authors = [
    {name = "mikeS141618"}
]
keywords = [
    "vision",
    "classification",
    "llm",
    "multimodal",
    "vllm",
    "data-parallel",
    "computer-vision",
    "pytorch",
    "cuda",
    "batch-processing",
    "image-analysis"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Environment :: GPU :: NVIDIA CUDA",
    "Operating System :: POSIX :: Linux",
]
dependencies = [
    # Core inference engine
    "vllm>=0.9.1",

    # Scientific computing stack
    "numpy>=2.2.6",
    "pandas>=2.3.0",
    "matplotlib>=3.10.3",
    "scikit-learn>=1.7.0",

    # Computer vision and image processing
    "opencv-python>=4.11.0",
    "pillow>=11.2.1",

    # Utilities and data loading
    "tqdm>=4.67.1",
    "prefetch-generator>=1.0.3",
]

[project.optional-dependencies]
dev = [
    # Testing framework
    "pytest>=8.4.1",

    # Development and interactive tools
    "ipython>=9.3.0",
    "jupyter>=1.1.1",

    # Code formatting and linting
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",

    # Documentation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

all = [
    "chromatic-orchestrator[dev]"
]

[project.urls]
"Homepage" = "https://github.com/mikeS141618/chromatic-orchestrator"
"Bug Reports" = "https://github.com/mikeS141618/chromatic-orchestrator/issues"
"Source" = "https://github.com/mikeS141618/chromatic-orchestrator"
"Documentation" = "https://github.com/mikeS141618/chromatic-orchestrator#readme"

[project.scripts]
chromatic-classify = "chromatic.cli.classify:cli_main"
chromatic-score = "chromatic.cli.score:cli_main"
chromatic-summarize = "chromatic.cli.summarize:cli_main"
chromatic-pipeline = "chromatic.cli.run_pipeline:cli_main"
chromatic-codemd = "chromatic.utils.codemd:cli_main"

[tool.hatch.build.targets.wheel]
packages = ["src/chromatic"]

[tool.hatch.metadata]
allow-direct-references = true

# Black configuration
[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU (deselect with '-m \"not gpu\"')",
    "integration: marks tests as integration tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/chromatic"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]